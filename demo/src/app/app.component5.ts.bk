import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup, Validators, FormControlName, FormArray } from '@angular/forms';

import { EventService } from './event.service';
import { Event } from './event';
import { Agenda } from "./agenda";

@Component({
   selector: 'app-root',
   templateUrl: './app.component.html',
   styleUrls: ['./app.component.css']
})
export class EventComponent implements OnInit { 
   //Component properties
   allEvents: Event[];
   statusCode: number;
   requestProcessing = false;
   agenda:Agenda[];
  
   //Create form
  userForm=new FormGroup({
eid:new FormControl,
name:new FormControl,
email:new FormControl,
address:new FormGroup({
  id:new FormControl,
street:new FormControl,
city: new FormControl,
postalcode:new FormControl
})
});

//Create constructor to get service instance
   constructor(private eventService: EventService) {
   }
   //Create ngOnInit() and and load articles
   ngOnInit(): void {
	   this.getAllEvents();
   }   
   //Fetch all articles
   getAllEvents() {
        this.eventService.getAllEvents()
	   .subscribe(
                data => this.allEvents = data,
                errorCode =>  this.statusCode = errorCode);   
   }
   //Handle create and update article
   onEventFormSubmit() {
	 
	  let eid = this.userForm.get('eId').value.trim();
          let name = this.userForm.get('name').value.trim();
           let email = this.userForm.get('email').value.trim();
           let id = this.userForm.get('id').value.trim();
             let street = this.userForm.get('street').value.trim();	
             let city = this.userForm.get('city').value.trim();
             let postalcode = this.userForm.get('postalcode').value.trim();
               
           let agenda=new Agenda(id,street,city,postalcode);
           let event=new Event(eid,name,email,agenda);

           
         
	  
	    
	    this.eventService.createEvent(event)
	      .subscribe(successCode => {
		              this.statusCode = successCode;
			      this.getAllEvents();	
			      //this.backToCreateArticle();
			},
		        errorCode => this.statusCode = errorCode);
	  }
}